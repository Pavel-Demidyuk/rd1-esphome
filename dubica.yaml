esphome:
  name: dubica
  friendly_name: dubica
esp32:
  board: esp32dev
  framework:
    type: arduino
logger:
  # level: VERY_VERBOSE
api:
  encryption:
    key: "N7NsSDPdeu2QfPpC0EKIKaw9rzUgOFZ2OQBQZ7+f6lQ="

ota:
  password: "70bec50222d4656fde384649e37d8a43"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

captive_portal:

# Датчик температуры
dallas:
  - pin: 4

# Настройка выключателей света и воды
switch:
  - platform: gpio
    id: light2
    name: "Light 2"
    pin: 2
  - platform: gpio
    id: light13
    name: "Light 13"
    pin: 13
  - platform: gpio
    id: water27
    name: "Water 27"
    pin: 27
  - platform: gpio
    id: water32
    name: "Water 32"
    pin:
      number: 32
  - platform: gpio
    id: water33
    name: "Water 33"
    pin:
      number: 33
  - platform: gpio
    id: open_cover_switch
    internal: true
    pin: 25
  - platform: gpio
    id: close_cover_switch
    internal: true
    pin: 26
  - platform: template
    id: windows_switch
    name: "windows helper"
    turn_on_action:
      - cover.open: windows
      - logger.log: "Cover is open!"
    turn_off_action:
      - cover.close: windows
      - logger.log: "Cover is closed!"
    internal: true
  # перезагрузка
  - platform: restart
    id: restart_button
    internal: true
  - platform: shutdown
    id: shutdown_button
    internal: true

i2c:
  sda: 21
  scl: 22
  frequency: 200kHz

# Кнопка энкодера
binary_sensor:
  - platform: gpio
    internal: true
    name: "menu_push"
    pin:
      number: 39
      inverted: true
    on_press:
      - display_menu.enter:

  # Сенсоры окна.
  - platform: gpio
    internal: true
    id: open_endstop_binary_sensor
    pin:
      number: 12
      inverted: true
  - platform: gpio
    internal: true
    id: close_endstop_binary_sensor
    pin:
      number: 14
      inverted: true
  # - platform: gpio
  #   internal: true
  #   id: open_movement_binary_sensor
  #   pin:
  #     number: 2
  #     inverted: true
  # - platform: gpio
  #   internal: true
  #   id: close_movement_binary_sensor
  #   pin:
  #     number: 2
  #     inverted: true

  # Сенсоры света
  - platform: gpio
    internal: true
    id: light_sensor1
    on_state:
      if:
        condition:
          binary_sensor.is_on: light_sensor1
        then:
          switch.turn_on: light2
        else:
          switch.turn_off: light2
    pin:
      number: 15
      inverted: true

  - platform: gpio
    internal: true
    id: light_sensor2
    on_state:
      if:
        condition:
          binary_sensor.is_on: light_sensor2
        then:
          switch.turn_on: light13
        else:
          switch.turn_off: light13
    pin:
      number: 36
      inverted: true

sensor:
  # Температура
  - platform: dallas
    id: main_temp
    index: 0
    name: "Temperature"
    filters:
      - lambda: !lambda |-
          if (x > 200 || isnan(x)) return 0;
          return x;
  # Крутелка энкодера
  - platform: rotary_encoder
    name: "Rotary Encoder"
    internal: true
    pin_a: 35
    pin_b: 34
    on_anticlockwise:
      - display_menu.up:
    on_clockwise:
      - display_menu.down:
  - platform: wifi_signal
    name: "WiFi Signal Sensor"
    id: wifi_sensor
    update_interval: 5s
    internal: true
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_sensor
    id: wifi_percent
    name: "WiFi Signal Percent"
    filters:
      - lambda: return round(min(max(2 * (x + 100.0), 0.0), 100.0));
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    accuracy_decimals: 1
    internal: true
  - platform: internal_temperature
    id: internal_temp
    update_interval: 5s
    internal: true

# Управление окна
cover:
  - platform: endstop
    id: windows
    name: "OKHA"
    open_action:
      - switch.turn_on: open_cover_switch
    open_duration: 1.5min #время открытия
    open_endstop: open_endstop_binary_sensor
    close_action:
      - switch.turn_on: close_cover_switch
    close_duration: 1min #время закрытия
    close_endstop: close_endstop_binary_sensor
    stop_action:
      - switch.turn_off: open_cover_switch
      - switch.turn_off: close_cover_switch
    on_open:
      - switch.template.publish:
          id: windows_switch
          state: ON
    on_closed:
      - switch.template.publish:
          id: windows_switch
          state: OFF

# Настройки экрана и кирилицы
display:
  - platform: lcd_pcf8574
    id: my_lcd
    update_interval: 0.5s
    dimensions: 20x4
    address: 0x27
    lambda: |-
      id(my_lcd_menu).draw();
      if (!id(my_lcd_menu).is_active())
        it.print("Menu is not active");
    user_characters:
      # https://omerk.github.io/lcdchargen/

      # Буква П
      - position: 0
        data:
          - 0b11111
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b00000
      # Буква У
      - position: 1
        data:
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b01010
          - 0b00100
          - 0b01000
          - 0b10000
          - 0b00000
      # Буква Д
      - position: 2
        data:
          - 0b00111
          - 0b00101
          - 0b00101
          - 0b01001
          - 0b01001
          - 0b01001
          - 0b11111
          - 0b10001
      # Буква Л
      - position: 3
        data:
          - 0b00111
          - 0b00101
          - 0b00101
          - 0b01001
          - 0b01001
          - 0b01001
          - 0b01001
          - 0b00000
      # Буква Ы
      - position: 4
        data:
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b11101
          - 0b10101
          - 0b10101
          - 0b11101
          - 0b00000
      # Буква 3
      - position: 5
        data:
          - 0b11110
          - 0b00001
          - 0b00001
          - 0b01110
          - 0b00001
          - 0b00001
          - 0b11110
          - 0b00000
        # Буква Г
      - position: 6
        data:
          - 0b11111
          - 0b10000
          - 0b10000
          - 0b10000
          - 0b10000
          - 0b10000
          - 0b10000
          - 0b00000
        # Буква И
      - position: 7
        data:
          - 0b10001
          - 0b10001
          - 0b10011
          - 0b10101
          - 0b11001
          - 0b10001
          - 0b10001
          - 0b00000

# Настройка меню
lcd_menu:
  id: my_lcd_menu
  display_id: my_lcd
  active: true
  mode: rotary
  on_enter:
    then:
      lambda: 'ESP_LOGI("display_menu", "root enter");'
  on_leave:
    then:
      lambda: 'ESP_LOGI("display_menu", "root leave");'
  items:
    - type: label
      text: !lambda |-
        char buf[16];
        snprintf(buf, sizeof(buf), "TEM\x08-PA: %4.1f\xdf""C", id(main_temp).state);
        return std::string(buf);

    - type: switch
      text: "OKHA"
      immediate_edit: true
      on_text: "OTKP"
      off_text: "\x05AKP"
      switch: windows_switch

    - type: switch
      text: "CBET 2"
      immediate_edit: true
      on_text: "BK\x03"
      off_text: "B\x04K\x03"
      switch: light2

    - type: switch
      text: "CBET 13"
      immediate_edit: true
      on_text: "BK\x03"
      off_text: "B\x04K\x03"
      switch: light13

    - type: switch
      text: "BO\x02A 27"
      immediate_edit: true
      on_text: "BK\x03"
      off_text: "B\x04K\x03"
      switch: water27

    - type: switch
      text: "BO\x02A 32"
      immediate_edit: true
      on_text: "BK\x03"
      off_text: "B\x04K\x03"
      switch: water32

    - type: switch
      text: "BO\x02A 33"
      immediate_edit: true
      on_text: "BK\x03"
      off_text: "B\x04K\x03"
      switch: water33

    - type: menu
      text: "\x08APAMETP\x04"
      on_enter:
        then:
          lambda: 'ESP_LOGI("display_menu", "enter: %s", it->get_text().c_str());'
      on_leave:
        then:
          lambda: 'ESP_LOGI("display_menu", "leave: %s", it->get_text().c_str());'
      items:
        - type: label
          text: !lambda |-
            return "Wifi " + std::to_string((int)id(wifi_percent).state) + "%";
        - type: label
          text: !lambda |-
            char buf[16];
            snprintf(buf, sizeof(buf), "CPU %4.1f\xdf""C", id(internal_temp).state);
            return std::string(buf);
        - type: command
          text: "\x08EPE\x05A\x06P\x01\x05KA"
          on_value:
            then:
              - switch.toggle: restart_button
        - type: command
          text: "OTK\x03. ESP"
          on_value:
            then:
              - switch.toggle: shutdown_button
        - type: back
          text: "<- HA\x05A\x02"
