esphome:
  name: esp-03
  friendly_name: esp-03

esp32:
  board: esp32dev
  framework:
    type: arduino
# Enable logging
logger:
    level: INFO
  # level: DEBUG
# Enable Home Assistant API
api:
  encryption:
    key: "+d6+hF+PAYZ/nLPF6iaUlhG1lPDBxiIjSsqYXDQ09TE="

ota:
#   password: "a398b192dfdaffa8c3966de95563a36a"

ethernet:
  type: LAN8720
  mdc_pin: GPIO23
  mdio_pin: GPIO18
  clk_mode: GPIO0_IN
  phy_addr: 1
  power_pin: GPIO16

  manual_ip:
      static_ip: 192.168.0.163
      gateway: 192.168.0.1
      subnet: 255.255.255.0

dallas:
  - pin: 14
    update_interval: 5s

i2c:
  sda: GPIO2
  scl: GPIO4
  id: bus_a
  frequency: 200kHz
  scan: true

mcp23008:
  - id: 'mcp23008_hub'
    address: 0x20
    
ads1115:
  - address: 0x4a


sensor:
  - platform: template
    id: "sensor_desired_temp"
    name: "Желаемая температура"
############################################### ТЕРМОДАТЧИКИ DS18b20 #######################################################    
  - platform: dallas
    id: parilka
    address:  0xe70000035148d328   
    name: "Температура в парилке"
    on_value:
      if: 
        condition: 
          switch.is_on: main_heater
        then:
          if:
            condition:
              lambda: |-
                return id(desired_temp).state - id(parilka).state  > 20;
            then:
              - logger.log:
                  format: "!!!! > 20, %.1f %.1f"                  
                  args: ['id(parilka).state', 'id(desired_temp).state']
                  level: INFO
              - switch.turn_on: switch_7 #каменка
              - switch.turn_on: switch_6 #конвектор 1
              - switch.turn_on: switch_5 #конвектор 2
            else:
              if:
                condition:
                  lambda: |-
                    return id(desired_temp).state - id(parilka).state > 10;
                then:
                  - logger.log:
                      format: "!!!! > 10, %.1f %.1f"                  
                      args: ['id(parilka).state', 'id(desired_temp).state']
                      level: INFO
                  - switch.turn_on: switch_7 #каменка
                  - switch.turn_on: switch_6 #конвектор 1
                  - switch.turn_off: switch_5 #конвектор 2
                else:  
                    - logger.log:
                        format: "!!!! < 10, %.1f %.1f"                  
                        args: ['id(parilka).state', 'id(desired_temp).state']
                        level: INFO               
                    - switch.turn_on: switch_7 #каменка
                    - switch.turn_off: switch_6 #конвектор 1
                    - switch.turn_off: switch_5 #конвектор 2
        else:
          # - logger.log:
          #     format: "!!!! ALL OFF"
          #     level: INFO
          - switch.turn_off: switch_7 #каменка
          - switch.turn_off: switch_6 #конвектор 1
          - switch.turn_off: switch_5 #конвектор 2
  
  # - platform: dallas
  #   address: 0xd13c81f648dabc28
  #   name: "temp2"

############################################### ТЕРМОПАРА КАМЕНКА #######################################################    
  - platform: ads1115
    id: kamenka
    multiplexer: 'A0_A1'
    update_interval: 5s    
    gain: 0.256
    name: "Температура каменки градусы"
    unit_of_measurement: "°C"
    accuracy_decimals: 0
    on_value_range: #### включение разрешить пар
      - above: 250
        then:
          - switch.turn_on: switch_7
      - above: 500 ### защитное выключение каменки 
        then:
          - switch.turn_off: switch_7
      - below: 250
        then:
          - switch.turn_off: switch_7
    filters:      
    - multiply: 1000
    # - round: 0
    - calibrate_linear:
         method: least_squares
         datapoints:
          - -0.1 -> 23
          - 7.2 -> 205       
          - 9.328 -> 255
          - 11.170 -> 300
          
    
  # - platform: ads1115
  #   id: kamenka2
  #   multiplexer: 'A0_A1'
  #   update_interval: 1s    
  #   gain: 0.256
  #   name: "Температура каменки вольты"
  #   filters:      
  #   - multiply: 1000

############################################### ЭНКОДЕР КРУТЕЛКА #######################################################
  - platform: rotary_encoder
    name: "Rotary Encoder"
    pin_a: 36
    pin_b: 35
    on_anticlockwise:
      - display_menu.up:
    on_clockwise:
      - display_menu.down:

############################################### СЕНСОРЫ MCP #######################################################
binary_sensor:
  - platform: gpio
    id: sensor_0
    name: "Сенсор нагревателя каменки"
    pin:
      mcp23xxx: mcp23008_hub
      number: 0
      mode:
        input: true
      inverted: false
  - platform: gpio
    id: sensor_1
    name: "Сенсор конвекторного каменки 1"
    pin:
      mcp23xxx: mcp23008_hub
      number: 1
      mode:
        input: true
      inverted: false
  - platform: gpio
    id: sensor_2
    name: "Сенсор конвекторного каменки 2"
    pin:
      mcp23xxx: mcp23008_hub
      number: 2
      mode:
        input: true
      inverted: false
  # - platform: gpio
  #   id: sensor_3
  #   name: "Сенсор пара"
  #   pin:
  #     mcp23xxx: mcp23008_hub
  #     number: 3
  #     mode:
  #       input: true
  #     inverted: false
  
############################################### ЭНКОДЕР КНОПКА #######################################################
  - platform: gpio
    name: "Key Encoder"
    pin: 39
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_press:
      - display_menu.enter:
############################################### ИСПОЛНИТЕЛЬНЫЕ GPIO #######################################################

switch:
  - platform: template
    id: main_heater
    name: "ТУМБЛЕР"
    optimistic: true
    on_turn_off:
      - climate.control:
            id: sauna_therm
            mode: "OFF"
    on_turn_on:
      - climate.control:
            id: sauna_therm
            mode: HEAT_COOL
    # turn_on_action:
    #     - climate.control:
    #         id: sauna_therm
    #         mode: HEAT_COOL
    # turn_off_action:
    #     - climate.control:
    #         id: sauna_therm
    #         mode: "OFF"
  - platform: gpio
    id: switch_32
    pin: 32
    # name: "Выключатель вентилятора"
    name: "Исполнительное устройство: пар разрешен"

############################################### ИСПОЛНИТЕЛЬНЫЕ УСТРОЙСТВА MCP (КАМЕНКА) #######################################################
  # - platform: gpio
  #   id: "switch_4"
  #   name: "Исполнительное устройство: Нагреватель каменки"
  #   internal: true
  #   pin:
  #     mcp23xxx: mcp23008_hub
  #     number: 4
  #     mode:
  #       output: true
  #     inverted: true
  - platform: gpio
    id: "switch_5"
    name: "Исполнительное устройство: Конвектор каменки 2"
    internal: false
    pin:
      mcp23xxx: mcp23008_hub
      number: 5
      mode:
        output: true
      inverted: false
  - platform: gpio
    id: "switch_6"
    name: "Исполнительное устройство: Конвектор каменки 1"
    internal: false
    pin:
      mcp23xxx: mcp23008_hub
      number: 6
      mode:
        output: true
      inverted: false
  - platform: gpio
    id: "switch_7"
    name: "Исполнительное устройство: Каменка"
    internal: false
    pin:
      mcp23xxx: mcp23008_hub
      number: 7
      mode:
        output: true
      inverted: false

############################################### ВЫКЛЮЧАТЕЛИ КАМЕНКИ MCP #######################################################
  - platform: template
    id: real_switch_1
    name: "Выключатель нагревателя каменки"
    lambda: |-
      if (id(sensor_0).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: switch_7 
    turn_off_action:
      - switch.turn_off: switch_7

  - platform: template
    id: real_switch_2
    name: "Выключатель конвектора каменки 2"
    lambda: |-
      if (id(sensor_1).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: switch_5  
    turn_off_action:
      - switch.turn_off: switch_5

  - platform: template
    id: real_switch_3
    name: "Выключатель конвектора каменки 1"
    lambda: |-
      if (id(sensor_2).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: switch_6   
    turn_off_action:
      - switch.turn_off: switch_6

############################################### ДИСПЛЕЙ ######################################################
display:
  - platform: lcd_pcf8574
    id: my_lcd
    dimensions: 20x4
    address: 0x27
    lambda: |-
      id(my_lcd_menu).draw();
      if (!id(my_lcd_menu).is_active())
        it.print("Menu is not active");
    
    user_characters:
      # Буква П
      - position: 0
        data:
          - 0b11111
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b00000
      # Буква И 
      - position: 1
        data:
    
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10011
          - 0b10101
          - 0b11001
          - 0b10001
          - 0b00000
       # Буква Л
      - position: 2
        data:         
          - 0b01110
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b00000
      # Буква A
      - position: 3
        data:         
          - 0b01110
          - 0b10001
          - 0b10001
          - 0b11111
          - 0b10001
          - 0b10001
          - 0b10001
          - 0b00000
      # Буква У
      - position: 4
        data:         
        - 0b10001
        - 0b10001
        - 0b10001
        - 0b01111
        - 0b00001
        - 0b00001
        - 0b01110
        - 0b00000
      # Буква C
      - position: 5
        data:         
        - 0b01111
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b01111
        - 0b00000
      # Буква Г
      - position: 6
        data:         
        - 0b11111
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b10000
        - 0b00000
        - 0b00000
      # Буква Б
      - position: 7
        data:         
        - 0b11111
        - 0b10000
        - 0b10000
        - 0b11110
        - 0b10001
        - 0b10001
        - 0b11110
        - 0b00000
############################################### МЕНЮ #######################################################

# Declare a LCD menu
lcd_menu:
  id: my_lcd_menu
  display_id: my_lcd
  active: true
  mode: rotary
  mark_back: 0x08
  mark_selected: 0x3e
  mark_editing: 0x2a
  mark_submenu: 0x7e
  on_enter:
    then:
      lambda: 'ESP_LOGI("display_menu", "root enter");'
  on_leave:
    then:
      lambda: 'ESP_LOGI("display_menu", "root leave");'
  items:
    - type: switch
      immediate_edit: false
      text: " T\x04M\x07\x02EP"
      on_text: 'ON'
      off_text: 'OFF'
      switch: main_heater
    - type: number
      text: " \x04CT. TEM\x08."
      format: '%.0f'
      number: desired_temp
      on_enter:
        then:
          # lambda: 'ESP_LOGI("display_menu", "number enter: %s, %s", it->get_text().c_str(), it->get_value_text().c_str());'
      on_leave:
        then:
          # lambda: 'ESP_LOGI("display_menu", "number leave: %s, %s", it->get_text().c_str(), it->get_value_text().c_str());'
      on_value:
        then:
          # - lambda: 'ESP_LOGI("number", "value: %f", x);'
          - climate.control:
              id: sauna_therm
              mode: HEAT_COOL
              target_temperature:  !lambda |-  
                return atof(it->get_value_text().c_str());
          # lambda: 'ESP_LOGI("display_menu", "number value: %s, %s", it->get_text().c_str(), it->get_value_text().c_str());'
    - type: label
      text: !lambda |-         
          return " KAMEHKA "  + std::to_string(static_cast<int>(id(kamenka).state));
    - type: label
      text: !lambda |-         
          return " \x08\x03P\x01\x02KA "  + std::to_string(static_cast<int>(id(parilka).state));
   

number:
  - platform: template
    id: desired_temp
    optimistic: true
    min_value: 20.0
    initial_value: 50
    max_value: 110.0
    restore_value: true
    step: 1
    on_value: 
      - sensor.template.publish:
          id: sensor_desired_temp
          state: !lambda 'return x;'
    # on_value:
    #   then:
    #     - lambda: 'ESP_LOGI("number", "value: %f", x);'
    #     - climate.control:
    #         id: sauna_therm
    #         mode: HEAT_COOL
    #         target_temperature:  !lambda |-  
    #           return x;


climate:
  - platform: thermostat
    id: sauna_therm
    name: "Термостат бани"
    sensor: parilka
    min_heating_off_time: 2s
    min_heating_run_time: 2s
    # max_temperature: 100
    visual:
      min_temperature: 20
      max_temperature: 110
      temperature_step: 1
    min_idle_time: 2s
    heat_action:
      - switch.turn_on: main_heater
    idle_action:
      - switch.turn_off: main_heater
    off_mode: 
      - switch.turn_off: main_heater
    # on_state:
    #   - logger.log:
    #       format: "!!!!ON STATE"
    #       level: INFO
    on_control:
      # - logger.log:
      #     format: "!!!! ON CONTROL  %.1f"
      #     args: ['*x.get_target_temperature()']
      #     level: INFO
      - number.set:
          id: desired_temp
          value: !lambda |-
            return *x.get_target_temperature();